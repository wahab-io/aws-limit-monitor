# %%SOLUTION_NAME%%
#
# template for %%SOLUTION_NAME%%
# **DO NOT DELETE**
#
# author: aws-solutions-builder@
AWSTemplateFormatVersion: 2010-09-09

Description: (SO0005s) - The AWS CloudFormation template for deployment of the %%SOLUTION_NAME%%. Version %%VERSION%% - Spoke Template

Parameters:
  # Master Account
  MasterAccount:
    Description: Account Id for the master account, eg. 999999000000
    Type: String
    AllowedPattern: ^\d{12}$

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Limit Monitor Configuration
        Parameters:
          - MasterAccount
    ParameterLabels:
      MasterAccount:
        default: Primary Account

Mappings:
  MetricsMap:
    Send-Data:
      SendAnonymousData: "Yes"

  RefreshRate:
    CronSchedule:
      Default: rate(1 day) # change if needed

  SourceCode:
    General:
      S3Bucket: %%BUCKET_NAME%%
      KeyPrefix: "%%SOLUTION_NAME%%/%%VERSION%%"
      TemplateBucket: %%TEMPLATE_BUCKET_NAME%%

<<<<<<< HEAD

=======
>>>>>>> local copy
  EventsMap:
    Checks:
      Services: '"AutoScaling","CloudFormation","DynamoDB","EBS","EC2","ELB","IAM","Kinesis","RDS","Route53","SES","VPC"' #change if needed

Resources:
  #
  # Limit Monitor Cloudwatch Rules
  # [TAOkRule, TAWarnRule, TAErrorRule]
  #
  TAOkRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Limit Monitor Solution - Spoke - Rule for TA OK events
      EventPattern: !Join
        - ""
        - - '{"account":["'
          - !Ref AWS::AccountId
          - '"],'
          - '"source":["aws.trustedadvisor", "limit-monitor-solution"],'
          - '"detail-type":["Trusted Advisor Check Item Refresh Notification", "Limit Monitor Checks"],'
          - '"detail":{'
          - '"status":['
          - '"OK"'
          - "],"
          - '"check-item-detail":{'
          - '"Service":['
          - !FindInMap
            - EventsMap
            - Checks
            - Services
          - "]"
          - "}"
          - "}"
          - "}"
      State: ENABLED
      Targets:
        - Arn: !Sub arn:aws:events:us-east-1:${MasterAccount}:event-bus/default
          Id: SpokeOkTarget

  TAWarnRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Limit Monitor Solution - Spoke - Rule for TA WARN events
      EventPattern: !Join
        - ""
        - - '{"account":["'
          - !Ref AWS::AccountId
          - '"],'
          - '"source":["aws.trustedadvisor", "limit-monitor-solution"],'
          - '"detail-type":["Trusted Advisor Check Item Refresh Notification", "Limit Monitor Checks"],'
          - '"detail":{'
          - '"status":['
          - '"WARN"'
          - "],"
          - '"check-item-detail":{'
          - '"Service":['
          - !FindInMap
            - EventsMap
            - Checks
            - Services
          - "]"
          - "}"
          - "}"
          - "}"
      State: ENABLED
      Targets:
        - Arn: !Sub arn:aws:events:us-east-1:${MasterAccount}:event-bus/default
          Id: SpokeWarnTarget

  TASErrorRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Limit Monitor Solution - Spoke - Rule for TA ERROR events
      EventPattern: !Join
        - ""
        - - '{"account":["'
          - !Ref AWS::AccountId
          - '"],'
          - '"source":["aws.trustedadvisor", "limit-monitor-solution"],'
          - '"detail-type":["Trusted Advisor Check Item Refresh Notification", "Limit Monitor Checks"],'
          - '"detail":{'
          - '"status":['
          - '"ERROR"'
          - "],"
          - '"check-item-detail":{'
          - '"Service":['
          - !FindInMap
            - EventsMap
            - Checks
            - Services
          - "]"
          - "}"
          - "}"
          - "}"
      State: ENABLED
      Targets:
        - Arn: !Sub arn:aws:events:us-east-1:${MasterAccount}:event-bus/default
          Id: SpokeErrorTarget

  #
  # TA Refresh resources
  # [TARefreshSchedule, TARefresher, TARefresherRole, TARefresherInvokePermission]
  #
  TARefreshSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: Schedule to refresh TA checks
      ScheduleExpression: !FindInMap [RefreshRate, CronSchedule, Default]
      State: ENABLED
      Targets:
        - Arn: !Sub ${TARefresher.Arn}
          Id: TARefreshRate

  TARefresher:
    Type: AWS::Lambda::Function
    Properties:
      Description: Serverless Limit Monitor - Lambda function to summarize service limits
      Environment:
        Variables:
          AWS_SERVICES: !FindInMap [EventsMap, Checks, Services]
          LOG_LEVEL: "INFO" #change to WARN, ERROR or DEBUG as needed

      Handler: index.handler
      Role: !Sub ${TARefresherRole.Arn}
      Code:
        S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
        S3Key:
          !Join [
            "/",
            [
              !FindInMap ["SourceCode", "General", "KeyPrefix"],
              "limtr-refresh-service.zip",
            ],
          ]
      Runtime: nodejs12.x
      Timeout: 300

  TARefresherRole:
    Type: AWS::IAM::Role
    # SO-Limit-M-41 - 07/30/2018 - cfn nag
    # Fixed cfn nag error, allow support:*
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F3
            reason: Override the IAM role to allow support:* resource on its permissions policy
          - id: W11
            reason: Override the IAM role to allow Resource:* for logs:PutLogEvents resource on its permissions policy
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub Limit-Monitor-Refresher-Policy-${AWS::StackName}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
              - Effect: Allow
                Action:
                  - support:*
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - servicequotas:GetAWSDefaultServiceQuota
                Resource:
                  - "*"

  TARefresherInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub ${TARefresher}
      Action: lambda:InvokeFunction
      Principal: !Sub events.amazonaws.com
      SourceArn: !Sub ${TARefreshSchedule.Arn}

  #
  # Helper resources
  # LimtrHelperFunction, CreateUUID, DeploymentData, LimtrHelperRole
  #
  LimtrHelperFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Environment:
        Variables:
          LOG_LEVEL: "INFO" #change to WARN, ERROR or DEBUG as needed
      Code:
        S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
        S3Key:
          !Join [
            "/",
            [
              !FindInMap ["SourceCode", "General", "KeyPrefix"],
              "limtr-helper-service.zip",
            ],
          ]
      Runtime: nodejs12.x
      Timeout: 300
      Description: This function generates UUID, establishes cross account trust on CloudWatch Event Bus and sends anonymous metric
      Role: !Sub ${LimtrHelperRole.Arn}

  CreateUUID:
    Type: Custom::UUID
    Properties:
      ServiceToken: !GetAtt LimtrHelperFunction.Arn

  DeploymentData:
    Type: Custom::DeploymentData
    Properties:
      ServiceToken: !GetAtt LimtrHelperFunction.Arn
      SOLUTION: "SO0005s"
      UUID: !Sub ${CreateUUID.UUID}
      VERSION: %%VERSION%%
      ANONYMOUS_DATA: !FindInMap [MetricsMap, Send-Data, SendAnonymousData]

  LimtrHelperRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: Override the IAM role to allow support:* for logs:PutLogEvents resource on its permissions policy
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: Custom_Limtr_Helper_Permissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*

  limitCheckStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://s3.amazonaws.com/${S3Bucket}/${KeyPrefix}/service-quotas-checks.template"
        - S3Bucket: !FindInMap ["SourceCode", "General", "TemplateBucket"]
          KeyPrefix: !FindInMap ["SourceCode", "General", "KeyPrefix"]

Outputs:
  ServiceChecks:
    Description: service limit checks monitored in the account
    Value: !FindInMap [EventsMap, Checks, Services]
